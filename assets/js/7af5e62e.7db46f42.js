"use strict";(self.webpackChunkdocs_pyrat=self.webpackChunkdocs_pyrat||[]).push([[64],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?i.createElement(y,r(r({ref:t},c),{},{components:n})):i.createElement(y,r({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var p=2;p<a;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},r="Visualization",s={unversionedId:"misc/visualization",id:"misc/visualization",title:"Visualization",description:"We also provide user-friendly and flexible API for interactive visualization. 2D and 3D visualization sharing same",source:"@site/docs/misc/visualization.md",sourceDirName:"misc",slug:"/misc/visualization",permalink:"/docs.pybdr/docs/misc/visualization",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/misc/visualization.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Optimization",permalink:"/docs.pybdr/docs/misc/optimization"},next:{title:"Functional",permalink:"/docs.pybdr/docs/misc/functional"}},l={},p=[{value:"Example",id:"example",level:2},{value:"2D visualization",id:"2d-visualization",level:3},{value:"3D visualization",id:"3d-visualization",level:3},{value:"References",id:"references",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"visualization"},"Visualization"),(0,o.kt)("p",null,"We also provide user-friendly and flexible API for interactive visualization. 2D and 3D visualization sharing same\nAPI ",(0,o.kt)("inlineCode",{parentName:"p"},"plot"),", different mode only depends on valid input specified dimensions for visualization. Following two demos\ndemonstrate very basic usage of this API."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title='examples/example_visualization.py'",title:"'examples/example_visualization.py'"},"import numpy as np\nfrom pyrat.algorithm import HSCC2013\nfrom pyrat.dynamic_system import NonLinSys\nfrom pyrat.geometry import Geometry, Zonotope, cvt2, PolyZonotope\nfrom pyrat.model import *\nfrom pyrat.util.visualization import plot\n\n# init dynamic system\nsystem = NonLinSys.Entity(VanDerPol())\n\n# settings for the computation\noptions = HSCC2013.Options()\noptions.t_end = 6.74\noptions.step = 0.005\noptions.taylor_terms = 4\noptions.tensor_order = 3\noptions.r0 = [Zonotope([1.4, 2.4], np.diag([0.17, 0.06]))]\noptions.u = Zonotope.zero(1, 1)\noptions.u_trans = np.zeros(1)\n\n# settings for using Zonotope\nZonotope.ORDER = 50\nZonotope.INTERMEDIATE_ORDER = 50\nZonotope.ERROR_ORDER = 20\n\n# reachable sets\nreachable = HSCC2013.reach(system, options)\n")),(0,o.kt)("p",null,"Once the computation completed, the reachable sets returned as ",(0,o.kt)("inlineCode",{parentName:"p"},"Reachable")," container."),(0,o.kt)("h3",{id:"2d-visualization"},"2D visualization"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title='example/example_visualzation.py'",title:"'example/example_visualzation.py'"},"#...\nreachable = HSCC2013.reach(system, options)\nplot(reachable,[0,1])\n")),(0,o.kt)("h3",{id:"3d-visualization"},"3D visualization"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title='example/example_visualzation.py'",title:"'example/example_visualzation.py'"},"#...\nreachable = HSCC2013.reach(system, options)\nplot(reachable,[0,1,2])\n")),(0,o.kt)("h3",{id:"references"},"References"))}u.isMDXComponent=!0}}]);